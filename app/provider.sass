@use 'sass:list'
@use 'sass:color'

//Puntos de corte de pantallas
$break-points: 0,400px,700px,900px,1210px,1620px,2160px,3240px,4320px


@mixin setAllTextColor($color)
    $texts:h1,h2,h3,h4,h5,h6,p,label
    @each $element in $texts
        #{$element}
            color:$color


@mixin setSomeTextColor($color,$texts)
    @each $element in $texts
        #{$element}
            color:$color


@function palete($tag)
    $able-colors: primary,primary-dark,primary-light,general-text,contrast,secondary,uncontrast,contrast-light,right-notification,error-notification,info-notification,over-primary,row-selected,error
    @if list.index($able-colors,$tag) == null
        @error 'Color no found'
        @return #757575
    @else 
        @return var(--#{$tag})

@mixin breakPointAtribute($atribute,$values)
    @if length($values) != length($break-points)
        @error "Se debe asignar valor a cada punto de corte ["+length($break-points)+"]"

    @for $i from 1 through length($break-points)
        @media screen and (min-width: list.nth($break-points,$i))
            #{$atribute}: list.nth($values,$i)

@mixin specificBreakPointsAtribute($atribute,$values)
    @each $break, $value in $values
        @media screen and (min-width: $break)
            #{$atribute}: $value

@mixin button($type)

    width: auto
    min-height: 2em

    padding: 0.4em 1em
        
    border-radius: 0.5rem

    text-decoration: none
    text-align: center

    transition: transform 1s ease-in-out, background-color 1s ease-in-out, border-color 1s ease-in-out, color 1s ease-in-out,box-shadow 1s ease-in-out

    &:hover
        transform: scale(1.05)

    &:active
        transform: scale(0.99)
    
    @if $type == 'main'

        background-color: palete('primary')

        color: #FFFFFF

        
        &:hover
            background-color: palete('primary-light')

        &:active
            background-color: palete('primary-dark')
    @else 
        border-width: 2px
        
        font-weight: 600
        

    @if $type == 'secondary'

        background-color: palete('contrast')
        
        border-color: palete('primary') 
        border-style: solid
        
        color: palete('primary')
    
        &:hover
            background-color: palete('contrast-light')
            box-shadow: palete('primary-dark') 0 0 5px 0
            border-color: palete('primary-light') 
            color: palete('primary-light')

        &:active
            background-color: palete('primary-dark')
            border-color: palete('uncontrast') 
            color: palete('uncontrast')

    
    @if $type == 'reject'

        background-color: palete('contrast')
        
        border-color: palete('error')
        border-style: solid
        
        color: palete('error')
    
        &:hover
            box-shadow: palete('error') 0 0 5px 0
            border-color: palete('error')
            color: palete('error')

        &:active
            background-color: palete('contrast-light')
            border-color: palete('uncontrast') 
            color: palete('uncontrast')
    
    
    @if $type == 'highlight'

        background-color: palete('contrast')
        
        border-color: palete('secondary')
        border-style: solid
        
        color: palete('secondary')
    
        &:hover
            box-shadow: palete('secondary') 0 0 5px 0
            border-color: palete('secondary')
            color: palete('secondary')

        &:active
            background-color: palete('contrast-light')
            border-color: palete('uncontrast') 
            color: palete('uncontrast')



@mixin fadeIn($time:2)
    animation-name: fadeIn 
    animation-duration: #{$time}s
    animation-timing-function: ease-in-out

@keyframes fadeIn 
    from
        opacity: 0
    to
        opacity: 100

    
@mixin fadeOut($time:2)
    animation-name: fadeOut 
    animation-duration: #{$time}s
    animation-timing-function: ease-in-out

@keyframes fadeOut 
    from
        opacity: 100
    to
        opacity: 0

    
@mixin fadeInOut($time)
    animation-name: fadeInOut 
    animation-duration: #{$time}s
    animation-timing-function: ease-in-out
    
@keyframes fadeInOut 
    from
        opacity: 0
    25%
        opacity: 100
    75%
        opacity: 100
    to
        opacity: 0

@mixin coolUnderline()
    transition: color 1s ease-in-out

    &:hover
        color: inherit

        hr
            width: 100%

            border: inherit 1px solid
            border-color: inherit
    
    hr
        width: 0
        border: transparent 1px solid

        transition: width 0.5s ease-in, border-color 1s ease-in-out

@mixin pageTitleUnderline($color: inherit)
    hr
        width: 120%
        border: $color 1px solid

        transition: width 0.5s ease-in, border-color 1s ease-in-out

        animation-name: underline
        animation-duration: 1s
        animation-timing-function: ease-out

        @keyframes underline
            0%
                width: 0

            100%
                width: 120%

@mixin tableColumns($columns)
    $nColumns:length($columns)
    $columnTemplate: ()
    $totalWidth: 0
    @each $column in $columns
        $columnTemplate: $columnTemplate #{$column}
        $nColumns: $nColumns + 1
        $totalWidth: $totalWidth + $column
    
    $nColumns: $nColumns + 1
    grid-template-columns: $columnTemplate
    grid-column: 1/#{$nColumns}
    width: $totalWidth+1
    
.pageTitle_h
    display: flex
    align-items: center
    justify-content: center
    flex-direction: column

    color: palete(primary-light)
    
    @include pageTitleUnderline(palete(primary-light))

.charging_animation
    width: auto
    height: 4em

.cancelForm_link
    position: absolute
    top: 2em
    left: 2em

    width: auto
    height: auto

    display: flex
    align-items: center
    justify-content: center

    background: palete('secondary')

    border-radius: 100%
    border: palete('secondary') 1em solid


    
    img
        position: relative
        right: 2px

        width: 3em
        height: 3em
